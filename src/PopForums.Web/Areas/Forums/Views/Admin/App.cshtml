
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Index2</title>
	<script src="~/lib/vue/dist/vue.js"></script>
	<script src="~/lib/vue-router/dist/vue-router.min.js"></script>
	<script src="~/lib/popper.js/dist/popper.min.js"></script>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
	<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
	<div class="container">
		<div id="app">
			<h1>Hello App!</h1>
			<p>
				<router-link to="/foo">Go to Foo</router-link>
				<router-link to="/categories">Categories</router-link>
			</p>

			<router-view></router-view>
		</div>
	</div>

	<script type="x-templates" id="foo">
		<main>
			<div>foo</div>
		</main>
	</script>

<script type="x-templates" id="Categories">
	<main>
		<div class="form-inline">
			<input type="text" v-model="newCategory" class="form-control" />
			<input type="button" v-on:click="saveNew" value="@PopForums.Resources.AddNew" class="btn btn-primary" />
		</div>
		<table class="table mt-3">
			<tr v-for="(category, index) in categories">
				<td>{{category.title}}</td>
				<td><input type="button" value="@PopForums.Resources.Edit" class="btn btn-primary" v-on:click="editCat(category)" /></td>
				<td><input type="button" value="@PopForums.Resources.Delete" class="btn btn-primary" v-on:click="deleteCat(category)" /></td>
				<td><input type="button" value="@PopForums.Resources.Up" class="btn" v-on:click="up(category)" v-if="index != 0" /></td>
				<td><input type="button" value="@PopForums.Resources.Down" class="btn" v-on:click="down(category)" v-if="index != categories.length-1" /></td>
			</tr>
		</table>
		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">@PopForums.Resources.Edit</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<input type="text" v-model="editCategory" class="form-control" />
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" v-on:click="saveCat">@PopForums.Resources.Save</button>
					</div>
				</div>
			</div>
		</div>
	</main>
	</script>

	<script>
		const basePath = "../../adminapi/";
		const Foo = { template: "#foo" }

		const Categories = {
			template: "#Categories",
			data() {
				return {
					categories: [],
					newCategory: "",
					editCategory: "",
					editID: 0
				}
			},
			mounted: function () {
				$.get(basePath + "GetCategories", response => this.categories = response);
			},
			methods: {
				saveNew: function () {
					$.post(basePath + "AddCategory", { title: this.newCategory }, response => this.categories = response);
					this.newCategory = "";
				},
				deleteCat: function(item) {
					$.post(basePath + "DeleteCategory", {id: item.categoryID}, response => this.categories = response);
				},
				up: function(item) {
					$.post(basePath + "MoveCategoryUp", {id: item.categoryID}, response => this.categories = response);
				},
				down: function(item) {
					$.post(basePath + "MoveCategoryDown", {id: item.categoryID}, response => this.categories = response);
				},
				editCat: function (item) {
					this.editCategory = item.title;
					this.editID = item.categoryID;
					const e = this.$refs.modal;
					$(e).modal("show");
				},
				saveCat: function() {
					$.post(basePath + "EditCategory", { categoryID: this.editID, newTitle: this.editCategory }, response => {
								this.categories = response;
								const e = this.$refs.modal;
								$(e).modal("hide");
							});
				}
			}
		}

		const routes = [
			{ path: '/foo', component: Foo },
			{ path: '/Categories', component: Categories }
		];

		const router = new VueRouter({
			routes: routes,
			mode: 'history',
			base: '/forums/admin/app/'
		});

		const app = new Vue({
			router
		}).$mount('#app');

		Vue.config.devtools = true;

	</script>

</body>
</html>
